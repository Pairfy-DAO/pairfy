{
  "preamble": {
    "title": "pairfy/marketplace",
    "description": "Aiken contracts for project 'pairfy/marketplace'",
    "version": "0.0.0",
    "plutusVersion": "v2",
    "compiler": {
      "name": "Aiken",
      "version": "v1.0.29-alpha+16fb02e"
    },
    "license": "Apache-2.0"
  },
  "validators": [
    {
      "title": "marketplace.state_machine",
      "datum": {
        "title": "datum",
        "schema": {
          "$ref": "#/definitions/marketplace~1MachineStateDatum"
        }
      },
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/marketplace~1MachineStateInput"
        }
      },
      "parameters": [
        {
          "title": "threadtoken",
          "schema": {
            "$ref": "#/definitions/ByteArray"
          }
        }
      ],
      "compiledCode": "590198010000323232323232322322323223225333009323232323232533300f300b3010375400a264a666020601800620022940c8cc004004dd6180a980b180b180b180b180b180b180b180b18091baa30153012375401044a66602800229404c94ccc048cdc79bae301700200414a2266006006002602e002264a66602066e1d20023011375400c264944dd7180a98091baa00613253330113370e900218091baa00714a2264944dd6980b18099baa006375a602a60246ea8014dd6980a18089baa004375c602660280046eb4c048004c038dd50009808001180798080009980680319806801a5eb805261365632533300830040011533300b300a37540042930b0a99980419b87480080044c8c94ccc034c04000852616375c601c00260146ea800854ccc020cdc3a40080022a66601660146ea800852616153330083370e90030008a99980598051baa00214985858c020dd5000a999802980098031baa002132323232533300c300f002149858dd7180680098068011bad300b001300737540042c6e1d2000375c002ae6955ceaab9e5573eae815d0aba201",
      "hash": "abbb8cadc8f32aed21654d798c3dcb72c562aa61f7f09750df3215d0"
    },
    {
      "title": "marketplace.threadtoken",
      "redeemer": {
        "title": "redeemer",
        "schema": {
          "$ref": "#/definitions/marketplace~1ThreadTokenInput"
        }
      },
      "parameters": [
        {
          "title": "token_name",
          "schema": {
            "$ref": "#/definitions/ByteArray"
          }
        },
        {
          "title": "utxo_ref",
          "schema": {
            "$ref": "#/definitions/aiken~1transaction~1OutputReference"
          }
        }
      ],
      "compiledCode": "5901f5010000323232323232322322232323225333009323232533300c3007300d3754002264646464a666026602c00426464a666024601a60266ea803854ccc048c034c04cdd5191980080080311299980b8008a60103d87a80001323253330163375e603660306ea800804c4cdd2a40006603400497ae0133004004001301b002301900115333012300c00113371e00402029405854ccc048cdc3800a4002266e3c0080405281bad3013002375c60220022c602800264a66601e601260206ea800452f5bded8c026eacc050c044dd500099191980080099198008009bab3016301730173017301700522533301500114bd6f7b630099191919299980b19b91488100002153330163371e9101000021003100513301a337606ea4008dd3000998030030019bab3017003375c602a0046032004602e00244a666028002298103d87a800013232323253330153372200e0042a66602a66e3c01c0084cdd2a4000660326e980052f5c02980103d87a80001330060060033756602c0066eb8c050008c060008c058004dd7180998081baa00337586024002601c6ea800858c040c044008c03c004c02cdd50008a4c26cac64a66601060060022a66601660146ea8010526161533300830020011533300b300a37540082930b0b18041baa003370e90011b8748000dd7000ab9a5573aaae7955cfaba05742ae89",
      "hash": "0c0d17d9095fe6b07a2727403e2c6f2dff8042ed7c300cb67a2577a2"
    }
  ],
  "definitions": {
    "ByteArray": {
      "dataType": "bytes"
    },
    "Int": {
      "dataType": "integer"
    },
    "aiken/transaction/OutputReference": {
      "title": "OutputReference",
      "description": "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
      "anyOf": [
        {
          "title": "OutputReference",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "transaction_id",
              "$ref": "#/definitions/aiken~1transaction~1TransactionId"
            },
            {
              "title": "output_index",
              "$ref": "#/definitions/Int"
            }
          ]
        }
      ]
    },
    "aiken/transaction/TransactionId": {
      "title": "TransactionId",
      "description": "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
      "anyOf": [
        {
          "title": "TransactionId",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "hash",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "marketplace/MachineStateDatum": {
      "title": "MachineStateDatum",
      "anyOf": [
        {
          "title": "MachineStateDatum",
          "dataType": "constructor",
          "index": 0,
          "fields": [
            {
              "title": "state",
              "$ref": "#/definitions/Int"
            },
            {
              "title": "seller",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        }
      ]
    },
    "marketplace/MachineStateInput": {
      "title": "MachineStateInput",
      "anyOf": [
        {
          "title": "Waiting",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        },
        {
          "title": "Locking",
          "dataType": "constructor",
          "index": 1,
          "fields": [
            {
              "title": "buyer",
              "$ref": "#/definitions/ByteArray"
            }
          ]
        },
        {
          "title": "Delivered",
          "dataType": "constructor",
          "index": 2,
          "fields": []
        },
        {
          "title": "Received",
          "dataType": "constructor",
          "index": 3,
          "fields": []
        }
      ]
    },
    "marketplace/ThreadTokenInput": {
      "title": "ThreadTokenInput",
      "anyOf": [
        {
          "title": "Mint",
          "dataType": "constructor",
          "index": 0,
          "fields": []
        },
        {
          "title": "Burn",
          "dataType": "constructor",
          "index": 1,
          "fields": []
        }
      ]
    }
  }
}